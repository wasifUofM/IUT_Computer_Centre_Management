/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

/**
 *
 * @author PaPa
 *
 *
 *
 */
import java.awt.Color;
import java.sql.*;
import net.proteanit.sql.DbUtils;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.FontFactory;
import java.util.Date;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfAWriter;
import com.itextpdf.text.pdf.PdfPTable;
import java.awt.Font;
import java.io.FileOutputStream;
import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;

import java.sql.ResultSet;
import java.text.MessageFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
public class Inquiry extends javax.swing.JPanel {

    /**
     * Creates new form Inquiry
     */
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    JTabbedPane jt = null;

    public Inquiry(JTabbedPane jtp) throws SQLException, ClassNotFoundException {
        initComponents();
        jt = jtp;
        conn = JavaConnect.ConnecrDb();


    }

    private void Update_table(String sql) {

        try {


            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            inquiry_table.setModel(DbUtils.resultSetToTableModel(rs));


        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (Exception e) {
            }
        }
    }
    private void Update_table_inquiry(String sql){
    
     try {


            pst = conn.prepareStatement(sql);
            pst.setString(1,txt_inquiry.getText());
            rs = pst.executeQuery();
            inquiry_table.setModel(DbUtils.resultSetToTableModel(rs));


        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (Exception e) {
            }
        }
    
    
    }

    private void NeedChart() {

        cmd_piechart.setEnabled(true);
        cmd_graphchart.setEnabled(true);
        cmd_barchart.setEnabled(true);

    }

    private void DontNeedChart() {

        cmd_piechart.setEnabled(false);
        cmd_graphchart.setEnabled(false);
        cmd_barchart.setEnabled(false);
    }

    private void NeedTextField() {
        txt_inquiry.setVisible(true);
        cmd_inquiry.setVisible(true);
        Label_inquiry.setVisible(true);
        Label_inquiry.setText("");


    }

    private void DontNeedTextField() {

        txt_inquiry.setVisible(false);
        cmd_inquiry.setVisible(false);
        Label_inquiry.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inquiry_table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txt_inquiry = new javax.swing.JTextField();
        cmd_inquiry = new javax.swing.JButton();
        Label_inquiry = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ComboBox_inquiry = new javax.swing.JComboBox();
        cmd_report = new javax.swing.JButton();
        cmd_print = new javax.swing.JButton();
        chart_panel = new javax.swing.JPanel();
        cmd_barchart = new javax.swing.JButton();
        cmd_piechart = new javax.swing.JButton();
        cmd_graphchart = new javax.swing.JButton();

        setName("Inquiries");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 153, 255), null), "Inquiry Table", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 1, 14), new java.awt.Color(0, 153, 153))); // NOI18N

        inquiry_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(inquiry_table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inquiries....", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 1, 14), new java.awt.Color(102, 0, 153))); // NOI18N

        txt_inquiry.setBackground(new java.awt.Color(204, 255, 204));

        cmd_inquiry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/search-icon.png"))); // NOI18N
        cmd_inquiry.setText("Find");
        cmd_inquiry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_inquiryActionPerformed(evt);
            }
        });

        ComboBox_inquiry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Number of MicroComputers in different Locations", "Number of Hardwares/Items in Hardware Database", "Number of choiced Hardware items in different locations", "Number of choiced Hardware items in different locations with ID", "Number of unused Hardwares/Items in Hardware Database", "Number of used Hardwares/Items in Hardware Database  " }));
        ComboBox_inquiry.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBox_inquiryPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jScrollPane3.setViewportView(ComboBox_inquiry);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(txt_inquiry, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmd_inquiry))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Label_inquiry, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(Label_inquiry, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_inquiry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmd_inquiry))
                .addGap(46, 46, 46))
        );

        cmd_report.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/report-icon.png"))); // NOI18N
        cmd_report.setText("Report");
        cmd_report.setToolTipText("Reports.....");
        cmd_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_reportActionPerformed(evt);
            }
        });

        cmd_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/printer-icon.png"))); // NOI18N
        cmd_print.setText("Print");
        cmd_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_printActionPerformed(evt);
            }
        });

        chart_panel.setBackground(new java.awt.Color(204, 255, 204));
        chart_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 204, 204), null, new java.awt.Color(255, 153, 153)), "Charts", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 1, 14), new java.awt.Color(51, 51, 255))); // NOI18N
        chart_panel.setToolTipText("Included charts");

        cmd_barchart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/barchart-icon.png"))); // NOI18N
        cmd_barchart.setToolTipText("Bar-chart");
        cmd_barchart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_barchartActionPerformed(evt);
            }
        });

        cmd_piechart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/chart-icon.png"))); // NOI18N
        cmd_piechart.setToolTipText("Pie-Chart");
        cmd_piechart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_piechartActionPerformed(evt);
            }
        });

        cmd_graphchart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gui/Chart-Graph-Ascending-icon.png"))); // NOI18N
        cmd_graphchart.setToolTipText("Graph-chart");

        javax.swing.GroupLayout chart_panelLayout = new javax.swing.GroupLayout(chart_panel);
        chart_panel.setLayout(chart_panelLayout);
        chart_panelLayout.setHorizontalGroup(
            chart_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chart_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmd_piechart, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmd_graphchart, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmd_barchart, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        chart_panelLayout.setVerticalGroup(
            chart_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chart_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chart_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmd_graphchart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_piechart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_barchart, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(chart_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(cmd_print, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmd_report, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(43, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chart_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmd_print)
                                    .addComponent(cmd_report))
                                .addGap(12, 12, 12)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBox_inquiryPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBox_inquiryPopupMenuWillBecomeInvisible

        String in = (String) ComboBox_inquiry.getSelectedItem();


        if (in == "Number of MicroComputers in different Locations") {

            NeedChart();
            DontNeedTextField();

           
                String sql = "SELECT Location,COUNT(*) AS Number_of_Computers FROM MicroComputerDB "
                        + "GROUP BY Location";
                Update_table(sql);

            
        }


        if (in == "Number of Hardwares/Items in Hardware Database") {

            NeedChart();
            DontNeedTextField();

          
                String sql = "select PurchaseDB.Item_name_or_Accesories,COUNT(*) AS Number_of_Items "
                        + "from HardwareDB,PurchaseDB "
                        + "where PurchaseDB.PurchaseID=HardwareDB.PurchaseID "
                        + "group by PurchaseDB.Item_name_or_Accesories";
                Update_table(sql);
         }


         if (in =="Number of choiced Hardware items in different locations") {

           }
          if (in =="Number of choiced Hardware items in different locations with ID") {
            DontNeedChart();
            NeedTextField();
           Label_inquiry.setText("Choose Hardware Items:");
            }
           if (in =="Number of unused Hardwares/Items in Hardware Database") {

            }
            if (in =="Number of used Hardwares/Items in Hardware Database") {

            }

    }//GEN-LAST:event_ComboBox_inquiryPopupMenuWillBecomeInvisible

    private void cmd_piechartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_piechartActionPerformed
        String in = (String) ComboBox_inquiry.getSelectedItem();
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        int row_no = inquiry_table.getRowCount();

        for (int row = 0; row < row_no; row++) {
            String tmp = (inquiry_table.getModel().getValueAt(row, 0).toString());
            String num = (inquiry_table.getModel().getValueAt(row, 1).toString());
            pieDataset.setValue(tmp, new Integer(num));
        }

        JFreeChart chart = ChartFactory.createPieChart(in, pieDataset, true, true, true);
        PiePlot p = (PiePlot) chart.getPlot();
        ChartFrame frame = new ChartFrame("Pie-Chart", chart);
        frame.setVisible(true);
        frame.setSize(450, 500);



    }//GEN-LAST:event_cmd_piechartActionPerformed

    private void cmd_barchartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_barchartActionPerformed
        
        String in = (String) ComboBox_inquiry.getSelectedItem();
       
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        int row_no = inquiry_table.getRowCount();
        for (int row = 0; row < row_no; row++) {
            String tmp = (inquiry_table.getModel().getValueAt(row, 0).toString());
            String num = (inquiry_table.getModel().getValueAt(row, 1).toString());
            dataset.setValue(new Integer(num),"Number", tmp);
        }
        JFreeChart chart = ChartFactory.createBarChart(in, inquiry_table.getColumnName(0), inquiry_table.getColumnName(1), dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = (CategoryPlot) chart.getPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar-Chart", chart);
        frame.setVisible(true);
        frame.setSize(450, 500);


    }//GEN-LAST:event_cmd_barchartActionPerformed

    private void cmd_inquiryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_inquiryActionPerformed
        String in = (String) ComboBox_inquiry.getSelectedItem();
        if (in == "Number of choiced Hardware items in different locations with ID") {

            String sql = "SELECT HardwareID,Location "
                    + "FROM PurchaseDB,HardwareDB,MicroComputerDB "
                    + "WHERE Item_name_or_Accesories=? AND  PurchaseDB.PurchaseID=HardwareDB.PurchaseID AND HardwareDB.PCID=MicroComputerDB.PCID "
                    + "GROUP BY HardwareID";
            Update_table_inquiry(sql);
            
            
         }
    }//GEN-LAST:event_cmd_inquiryActionPerformed

    private void cmd_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_printActionPerformed
      
        String in = (String) ComboBox_inquiry.getSelectedItem();
        MessageFormat header = new MessageFormat(" IUT Computer Center ::"+in);
        
       

        MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try {

            inquiry_table.print(JTable.PrintMode.NORMAL, header, footer);
            
        } catch (java.awt.print.PrinterException e) {
            System.err.format("can't print", e.getMessage());

        }
        JOptionPane.showMessageDialog(null, "Report Printed");
    }//GEN-LAST:event_cmd_printActionPerformed
public String CurrentDate() {
         
        String date_time=null;
        Calendar cal = new GregorianCalendar();
        Integer month = cal.get(Calendar.MONTH);
        Integer year = cal.get(Calendar.YEAR);
        Integer day = cal.get(Calendar.DAY_OF_MONTH);
        
        Integer second = cal.get(Calendar.SECOND);
        Integer minute = cal.get(Calendar.MINUTE);
        Integer hour = cal.get(Calendar.HOUR);
        date_time=year.toString()+month.toString()+day.toString()+hour.toString()+minute.toString()+second.toString();
        return date_time;
    }
    private void cmd_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_reportActionPerformed
          try {

             String in = (String) ComboBox_inquiry.getSelectedItem();
            Document doc = new Document();
            PdfAWriter.getInstance(doc, new FileOutputStream("Report"+CurrentDate()+".pdf"));
            doc.open();
            doc.add(new Paragraph("IUT Computer Center ::"+in, FontFactory.getFont(FontFactory.TIMES_BOLD, 
18, Font.BOLD, BaseColor.GRAY)));
            doc.add(new Paragraph(new java.util.Date().toString()));
            doc.add(new Paragraph("             "));

            int col = inquiry_table.getColumnCount();
            PdfPTable table = new PdfPTable(col);

            for (int i = 0; i < col; i++) {
                String col_name = inquiry_table.getColumnName(i);
                table.addCell(new Paragraph(col_name, FontFactory.getFont(FontFactory.TIMES_BOLD, 14, Font.BOLD, 
BaseColor.BLUE)));
            }
            int row = inquiry_table.getRowCount();

            for (int i = 0; i < row; i++) {
                for(int j=0;j<col;j++){
                String temp = (inquiry_table.getModel().getValueAt(i,j).toString());
                table.addCell(temp);
                }
            }


           doc.add(table);
           doc.close();
           

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
        JOptionPane.showMessageDialog(null, "Report Printed");



  


    }//GEN-LAST:event_cmd_reportActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboBox_inquiry;
    private javax.swing.JLabel Label_inquiry;
    private javax.swing.JPanel chart_panel;
    private javax.swing.JButton cmd_barchart;
    private javax.swing.JButton cmd_graphchart;
    private javax.swing.JButton cmd_inquiry;
    private javax.swing.JButton cmd_piechart;
    private javax.swing.JButton cmd_print;
    private javax.swing.JButton cmd_report;
    private javax.swing.JTable inquiry_table;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField txt_inquiry;
    // End of variables declaration//GEN-END:variables
}
